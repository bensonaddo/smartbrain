{"version":3,"sources":["components/Navigation/Navigation.js","components/Logos/brain.png","components/Logos/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FacialRecognition/FacialRecognition.js","components/Signin/Signin.js","components/Register/Register.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","isSignedin","style","display","justifyContent","onClick","className","Logo","options","max","height","width","src","Brain","alt","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","FacialRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","class","htmlFor","name","value","href","Register","action","method","app","Clarifai","App","apiKey","particlesOptions","particles","line_linked","shadow","enable","color","blur","move","direction","outMode","random","speed","straight","collisions","number","density","area","opacity","shape","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","route","isSignedIn","this","params","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.bc7d1234.chunk.js","sourcesContent":["import React from \"react\";\n\n// Define Navigation Component\nconst Navigation = ({ onRouteChange, isSignedin }) => {\n        if (isSignedin){\n            return(\n                <nav style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                    <p onClick={ () => onRouteChange('signin') } className=\"f3 link dim black underline pa3 pointer\">Sign out</p>\n                </nav>\n            )\n        }\n        else {\n            return(\n                <nav style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                    <p onClick={ () => onRouteChange('home') } className=\"f3 link dim black underline pa3 pointer\">Sign In</p>\n                    <p onClick={ () => onRouteChange('register') } className=\"f3 link dim black underline pa3 pointer\">Register</p>                    \n                </nav>\n            )\n        }\n}\n\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/brain.f023d551.png\";","import React from \"react\";\nimport Tilt from 'react-tilt'\nimport Brain from './brain.png'\nimport './logo.css'\n\nconst Logo = () => {\n    return (\n        <div className=\"ma4 mt0\">\n            {/*https://www.npmjs.com/package/react-tilt */}\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 50}} style={{ height: 150, width: 150 }} >\n                <div className=\"Tilt-inner pa3\">\n                    <img src={Brain} alt=\"logo\" />\n                </div>\n            </Tilt>\n        </div>\n        \n    )\n}\n\nexport default Logo;","import React from \"react\";\nimport './ImageLinkForm.css'\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n    return (\n        <div>\n            <p className=\"f3\">\n                {\"This Magic Brain will detect faces in your picture. Give it a try\"}\n            </p>\n            <div className=\"center\">\n                <div className=\"form center pa4 br3 shadow-5\">\n                    <input className=\"f4 pa2 w-70 center\" \n                    type={\"text\"} \n                    onChange={onInputChange}\n                    />\n                    <button className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\" \n                    onClick={onButtonSubmit}>Detect</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ImageLinkForm;","import React from \"react\";\n\nconst Rank = () => {\n    return (\n        <div>\n            <div className=\"white f3\">\n                {'Sammy, your current rank is...'}\n            </div>\n            <div className=\"white f1\">\n                {'#5'}\n            </div>\n        </div>\n    )\n}\n\nexport default Rank;","import React from \"react\";\nimport './FacialRecognition.css'\nconst FacialRecognition = ({ imageUrl, box }) => {\n    return (\n        <div className=\"center ma\">\n            <div className=\"absolute mt2\">\n                <img id=\"imageUrl\" src={imageUrl} alt=\"car image\" width={'500px'} height={'auto'}/>\n                <div className=\"bounding-box\" style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\n            </div>   \n        </div>\n    )\n}\n\nexport default FacialRecognition;","import React from 'react';\nimport './Signin.css'\n\nconst Signin = ({ onRouteChange }) => {\n    return (\n            <article class=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                        <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\n                        </div>\n                        <div className=\"mv3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\n                        </div>\n                        <label className=\"pa0 ma0 lh-copy f6 pointer\"><input type=\"checkbox\"/> Remember me</label>\n                        </fieldset>\n                        <div className=\"\">\n                        <input onClick={ () => onRouteChange('home') } className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\n                        </div>\n                        <div className=\"lh-copy mt3\">\n                        <p onClick={ () => onRouteChange('register') } className=\"f6 link dim black db\">Register</p>\n                        <a href=\"#0\" className=\"f6 link dim black db\">Forgot your password?</a>\n                        </div>\n                    </div>\n                </main>\n            </article>\n    )\n}\n\nexport default Signin;","import React from \"react\";\n\nconst Register = ({ onRouteChange }) => {\n    return (\n        <article class=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n            <div action=\"sign-up_submit\" method=\"get\" accept-charset=\"utf-8\">\n                <fieldset id=\"sign_up\" class=\"ba b--transparent ph0 mh0\">\n                <legend class=\"ph0 mh0 fw6 clip\">Sign Up</legend>\n                <div class=\"mt3\">\n                    <label class=\"db fw4 lh-copy f6\" htmlFor=\"email-address\">Email address</label>\n                    <input class=\"pa2 input-reset ba bg-transparent w-100 measure\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\n                </div>\n                <div class=\"mt3\">\n                    <label class=\"db fw4 lh-copy f6\" htmlFor=\"password\">Password</label>\n                    <input class=\"b pa2 input-reset ba bg-transparent\" type=\"password\" name=\"password\"  id=\"password\"/>\n                </div>\n                </fieldset>\n                <div onClick={ () => onRouteChange('signin') } class=\"mt3\"><input class=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6\" type=\"submit\" value=\"Sign Up\"/></div>\n            </div>\n        </article>\n\n    )\n}\n\nexport default Register;","import './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logos/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-tsparticles';\nimport React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport FacialRecognition from './components/FacialRecognition/FacialRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\n\nconst app = new Clarifai.App({\n apiKey: 'd0cbca2fe0ec4edd8af2c3198d65e0ac'\n});\n\nconst particlesOptions = {\n  // https://www.npmjs.com/package/react-tsparticles\n  particles: {\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"#3CA9D1\",\n        blur: 5\n      }\n    },\n    move: {\n      direction: \"none\",\n      enable: true,\n      outMode: \"bounce\",\n      random: false,\n      speed: 6,\n      straight: false,\n    },\n    collisions: {\n      enable: true,\n    },\n    number: {\n      density: {\n        enable: true,\n        area: 800,\n      },\n      value: 80,\n    },\n    opacity: {\n      value: 0.5,\n    },\n    shape: {\n      type: \"circle\",\n    },\n  }\n}\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false\n    }\n  }\n\n  // Added feature to render box info from image detection\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box\n    const image = document.getElementById('imageUrl');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    // console.log(width,height);\n    return {\n      // This gets the first left number of the clarify data and multiply with the width size\n      leftCol: clarifaiFace.left_col * width,\n      // This gets the top row number of the clarify data and multiply with the hight size\n      topRow: clarifaiFace.top_row * height,\n      // this would get the size of of the right col\n      rightCol: width - (clarifaiFace.right_col * width),\n      //This gets the button row size from clarifaiFace\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box)\n    this.setState({box: box})\n  }\n\n  // Input event to monitor inputs\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n  }\n\n  // Click event for detect button\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL, \n      this.state.input)\n      .then( response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signin'){\n      this.setState({isSignedIn: false})\n    }\n    else if (route === 'home'){\n      this.setState({isSignedIn: true})\n    }\n    // else if (route === 'register'){\n    //   this.setState({isSignedIn: false})\n    // }\n    this.setState({route: route});\n  }\n\n  render(){\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles' \n          params={particlesOptions}\n        />\n        <Navigation isSignedin={isSignedIn} onRouteChange={this.onRouteChange}/>\n        { route === 'home' \n          ? <div>\n            <Logo />\n            <Rank />\n            <ImageLinkForm \n              onInputChange={this.onInputChange} \n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FacialRecognition box={box} imageUrl={imageUrl}/>\n        </div>\n          : (\n            this.state.route === 'signin' ?\n              <Signin onRouteChange={this.onRouteChange}/>\n            :\n              <Register onRouteChange={this.onRouteChange}/>\n          )  \n        } \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}